proto
	outer
		data----------------------------------
			Vector3
				float x,y,z
			PlayerData
				int id
				Vector3 pos,vel
		msg----------------------------------
			CLogin
				string account
			CMove
				PlayerData data
			SEnter
				PlayerData self
				repeated PlayerData others
			SAdd
				PlayerData data
			SRemove
				int id
			SMove
				PlayerData data
			
	inner
		data----------------------------------
			AABB
				float minx, miny, maxx, maxy
			Cell
				AABB inner	// entity only sync in this cell
				AABB ghost	// entity sync in this cell and to ghost in other cells
				AABB swith	// entity turn to ghost and sync switch entity
				AABB outer	// destroy ghost in this cell
			Entity
				outer.PlayerData data
				PID connPID
				bool ghostZone
		msg----------------------------------
			Enter
				int id
				Entity entity
			Exit
				int id
			Sync
				Entity entity
			Transfer
				int step
				Entity entity

actor
	AuthActor
		idGen
		OnAuth(string account)
			idGen++
			rep(idGen)
			
	GateActor

	ConnActor
		int id
		PID cellPID

		OnCLogin(CLogin m)
			id = authPID.RequestFuture(Auth, m.account)
			cellmanPID.Request(selfPID, Enter{id})
		OnDisconnect
			if cellPID!=nil{
				cellPID.Request(selfPID, Exit{id})
			}else{
				cellmanPID.Request(selfPID, Exit{id})
			}
		OnCMove(CMove m)
			cellPID.Request(selfPID, m)
		OnSEnter(SEnter m)
			cellPID = senderPID
			sendToClient(m)
		OnTransfer(Transfer m)
			cellPID = senderPID
		
	CellActor
		Cell cell
		repeated Entity entities

		broad(m)

		OnEnter(Enter m)
			entities.Add(m.entity.id,m.entity)

			m.entity.connPID.Request(selfPID, SEnter{m.entity.data})
			broad(SAdd{m.entity.data})
		OnCMove(CMove m)
			entity = entities.Get(m.data.id)
			if entity.connPID==nil{
				cellmanPID.Request(m)
				return
			}

			entity.data = m.data
			broad(SMove{entity.data})
			if (entity.ghostZone) {
				cellmanPID.Request(Sync{entity})
			}
		OnExit(Exit m)
			entity = entities.Get(m.id)
			broad(SRemove{m.id})
			entities.Remove(m.id)
		OnSync(Sync m)
			m.entity
		OnTransfer(Transfer m)
			entities.Set(m.entity.id,m.entity)
			m.entity.connPID.Request(selfPID,m)
		onEntityEnterGhostZone(Entity entity)
			if entity.isEntity {
				entity.ghostZone = true
				cellmanPID.Request(Sync{entity})
			}
		onEntityExitGhostZone(Entity entity)
			if entity.isEntity {
				entity.ghostZone = false
			}
		onEntityTransfer(Entity entity)
			if entity.connPID==nil {
				return
			}

			cellmanPID.Tell(Transfer{0,entity})	
			entity.connPID = nil

	CellmanActor
		repeated Cell cells

		OnEnter(Enter m)
			m.entity = loadData(m.id)
			m.entity.connPID = senderPID
			cellPID = cells.Find(m.entity.data)
			cellPID.Tell(m)
		OnExit
		OnSync(Sync m)
			cellPID = cells.find(m.entity.data)
			cellPID.Tell(m)
		OnTransfer(Transfer m)
			cellPID = cells.findEntityCell(m.entity.data)
			m.step++
			cellPID.Tell(m)
		OnCMove(CMove m)
			cellPID = cells.findEntityCell(m.data)
			cellPID.Tell(m)
			
			
